
indexer
{
}

searchd
{
  listen = 127.0.0.1:9306:mysql41
  log = /home/insertyourcoin/RubymineProjects/generation-c/log/development.searchd.log
  query_log = /home/insertyourcoin/RubymineProjects/generation-c/log/development.searchd.query.log
  pid_file = /home/insertyourcoin/RubymineProjects/generation-c/log/development.sphinx.pid
  workers = threads
  binlog_path = /home/insertyourcoin/RubymineProjects/generation-c/tmp/binlog/development
}

source grid_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = generation-c_development
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `grids`.`id` * 4 + 0 AS `id`, grids.`name` AS `name`, grids.`description` AS `description`, grids.`id` AS `sphinx_internal_id`, 'Grid' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, grids.`user_id` AS `user_id`, UNIX_TIMESTAMP(grids.`created_at`) AS `created_at`, UNIX_TIMESTAMP(grids.`updated_at`) AS `updated_at` FROM `grids`  WHERE (`grids`.`id` BETWEEN $start AND $end) GROUP BY `grids`.`id`, grids.`name`, grids.`description`, grids.`id`, grids.`user_id`, grids.`created_at`, grids.`updated_at`  ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`grids`.`id`), 1), IFNULL(MAX(`grids`.`id`), 1) FROM `grids`
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = user_id
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_query_info = SELECT `grids`.* FROM `grids`  WHERE (`grids`.`id` = ($id - 0) / 4)
}

index grid_core
{
  type = plain
  path = /home/insertyourcoin/RubymineProjects/generation-c/db/sphinx/development/grid_core
  docinfo = extern
  charset_type = utf-8
  source = grid_core_0
}

source rule_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = generation-c_development
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `rules`.`id` * 4 + 1 AS `id`, rules.`name` AS `name`, rules.`description` AS `description`, rules.`id` AS `sphinx_internal_id`, 'Rule' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, rules.`user_id` AS `user_id`, UNIX_TIMESTAMP(rules.`created_at`) AS `created_at`, UNIX_TIMESTAMP(rules.`updated_at`) AS `updated_at`, rules.`turn_on` AS `turn_on`, rules.`turn_off` AS `turn_off` FROM `rules`  WHERE (`rules`.`id` BETWEEN $start AND $end) GROUP BY `rules`.`id`, rules.`name`, rules.`description`, rules.`id`, rules.`user_id`, rules.`created_at`, rules.`updated_at`, rules.`turn_on`, rules.`turn_off`  ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`rules`.`id`), 1), IFNULL(MAX(`rules`.`id`), 1) FROM `rules`
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = user_id
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_attr_string = turn_on
  sql_attr_string = turn_off
  sql_query_info = SELECT `rules`.* FROM `rules`  WHERE (`rules`.`id` = ($id - 1) / 4)
}

index rule_core
{
  type = plain
  path = /home/insertyourcoin/RubymineProjects/generation-c/db/sphinx/development/rule_core
  docinfo = extern
  charset_type = utf-8
  source = rule_core_0
}

index grid
{
  type = distributed
  local = grid_core
}

index rule
{
  type = distributed
  local = rule_core
}
